import type { SpreadsheetSerialized } from "../spreadsheet"

export const gameOfLife: SpreadsheetSerialized =
  { "key": "gameOfLife", "grid": [null, null, null, null, [null, null, null, { "type": "normal", "location": { "col": 3, "row": 4 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 4, "row": 4 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }], [null, null, { "type": "normal", "location": { "col": 2, "row": 5 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, null, null, { "type": "normal", "location": { "col": 5, "row": 5 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }], [null, null, null, { "type": "normal", "location": { "col": 3, "row": 6 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 4, "row": 6 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }], [null, null, null, null, null, { "type": "normal", "location": { "col": 5, "row": 7 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, null, { "type": "normal", "location": { "col": 7, "row": 7 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }], [null, null, { "type": "normal", "location": { "col": 2, "row": 8 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 3, "row": 8 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 4, "row": 8 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 5, "row": 8 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, null, { "type": "normal", "location": { "col": 7, "row": 8 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 8, "row": 8 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }], [null, null, { "type": "normal", "location": { "col": 2, "row": 9 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "timer", "location": { "row": 9, "col": 3 }, "label": "Timer", "loopTimeMs": 250, "paused": false, "action": "// conway's game of life algorithm\nconst aliveCellText = \"▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮\";\n\n// store all states\nconst rows = [];\nfor (let r = 0; r < 50; r++) {\n  if (!rows[r]) rows[r] = [];\n  const row = rows[r];\n\n  for (let c = 0; c < 26; c++) {\n    row[c] = get(`${c},${r}`);\n  }\n}\n\n// update all cells\nfor (let r = 0; r < 50; r++) {\n  const row = rows[r];\n  for (let c = 0; c < 26; c++) {\n    const state = row[c] === aliveCellText;\n\n    // neighbors (if wall then dead)\n    let numAlive = 0;\n\n    // top left\n    if (r !== 0 && c !== 0 && rows[r - 1][c - 1]) numAlive++;\n\n    // top middle\n    if (r !== 0 && rows[r - 1][c]) numAlive++;\n\n    // top right\n    if (r !== 0 && c !== 25 && rows[r - 1][c + 1]) numAlive++;\n\n    // middle left\n    if (c !== 0 && rows[r][c - 1]) numAlive++;\n\n    // middle right\n    if (c !== 25 && rows[r][c + 1]) numAlive++;\n\n    // bottom left\n    if (r !== 49 && c !== 0 && rows[r + 1][c - 1]) numAlive++;\n\n    // bottom middle\n    if (r !== 49 && rows[r + 1][c]) numAlive++;\n\n    // bottom right\n    if (r !== 49 && c !== 25 && rows[r + 1][c + 1]) numAlive++;\n\n    // alive\n    const location = `${c},${r}`;\n    if (state) {\n      // rule 1\n      if (numAlive < 2) {\n        set(location, \"\");\n      }\n      // rule 2\n      else if (numAlive === 2 || numAlive === 3) {\n        set(location, aliveCellText);\n      }\n      // rule 3\n      else if (numAlive > 3) {\n        set(location, \"\");\n      }\n    }\n    // dead\n    else {\n      // rule 4\n      if (numAlive === 3) {\n        set(location, aliveCellText);\n      }\n    }\n  }\n}\n\n// rare chance to spawn new life\nconst locations = [\n  [2, 8],\n  [3, 8],\n  [4, 8],\n  [2, 9],\n  [4, 9],\n  [2, 10],\n  [4, 10],\n];\nfor (const loc of locations) {\n  if (Math.random() < 0.5) {\n    set(`${loc[0]},${loc[1]}`, aliveCellText);\n  }\n}\n" }, { "type": "normal", "location": { "col": 4, "row": 9 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, null, { "type": "normal", "location": { "col": 6, "row": 9 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, null, { "type": "normal", "location": { "col": 8, "row": 9 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }], [null, null, null, { "type": "button", "location": { "row": 10, "col": 3 }, "label": "Genocide", "buttonStyle": "destructive", "action": "set(\"A0:Z49\", \"\");" }, { "type": "normal", "location": { "col": 4, "row": 10 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, null, { "type": "normal", "location": { "col": 6, "row": 10 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 7, "row": 10 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }], [null, null, null, { "type": "normal", "location": { "col": 3, "row": 11 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 4, "row": 11 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 5, "row": 11 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }, { "type": "normal", "location": { "col": 6, "row": 11 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }], [null, null, null, null, null, { "type": "normal", "location": { "col": 5, "row": 12 }, "value": "▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮", "format": null, "calculate": null, "style": { "bold": false, "italic": false, "underline": false } }]], "customColSizes": [60, 60, 60, 83, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60] };
